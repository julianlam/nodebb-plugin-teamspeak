{
  "author": {
    "name": "gwTumm",
    "email": "timklge@wh2.tu-dresden.de",
    "url": "https://github.com/gwTumm"
  },
  "name": "node-teamspeak",
  "description": "TeamSpeak (R)-3-ServerQuery-Client for node.js",
  "version": "1.0.4",
  "repository": {
    "type": "git",
    "url": "git://github.com/gwTumm/node-teamspeak.git"
  },
  "main": "index.js",
  "dependencies": {
    "line-input-stream": ">=1.0.1"
  },
  "keywords": [
    "teamspeak",
    "serverquery",
    "ts3",
    "ts"
  ],
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "bugs": {
    "url": "https://github.com/gwTumm/node-teamspeak/issues",
    "email": "timklge@wh2.tu-dresden.de"
  },
  "license": "Beerware",
  "readmeFilename": "README.md",
  "readme": "node-teamspeak\n==============\n\nThis is a tiny CommonJS-module which allows you to connect\nto any TeamSpeak (R)-3-Server which has the ServerQuery-API\nenabled. Using the ServerQuery-API, you can do everything\na normal TeamSpeak-user can do\n(except sending and receiving voice data) automatically via JavaScript\n(e. g. listing clients logged in on the server).\n\nThe ServerQuery-specification is available [here](http://media.teamspeak.com/ts3_literature/TeamSpeak%203%20Server%20Query%20Manual.pdf).\n\nHow to install\n---------------\n\nNode:\n\n\tnpm install node-teamspeak\n\t\nExample Usage\n----------------\n\nAfter registering a ServerQuery-account using your TeamSpeak-Client, you\ncan login using node-teamspeak (Alternatively, you can login as the root\naccount \"ServerAdmin\" which is created during the installation of the \nserver). The following code prints out a JSON-array containing all\n clients that are currently connected to the first virtual server:\n\n\tvar TeamSpeakClient = require(\"node-teamspeak\"),\n\t\tutil = require(\"util\");\n\n\tvar cl = new TeamSpeakClient(\"##SERVERIP###\");\n\tcl.send(\"login\", {client_login_name: \"##USERNAME##\", client_login_password: \"##PASSWORD##\"}, function(err, response, rawResponse){\n\t\tcl.send(\"use\", {sid: 1}, function(err, response, rawResponse){\n\t\t\tcl.send(\"clientlist\", function(err, response, rawResponse){\n\t\t\t\tconsole.log(util.inspect(response));\n\t\t\t});\n\t\t});\n\t});\n\nUsage information\n-----------------\n\n* TeamSpeakClient.send is the main method that executes a command. An array\nwith options, an object with parameters and a callback-function can be\npassed to the send-function. The callback-function takes two parameters:\nerr (which contains an object like {id: 1, msg: \"failed\"} if there was an\nerror) and response, which is an object which contains the answer sent\nby the server (if there was any).\n* Every TeamSpeakClient-instance is an EventEmitter. You can install\nlisteners to the \"connect\", \"close\" and the \"error\"-event. The error-event\nwill only be fired if there was socket-error, not if a sent command failed.\n* If you want to register to notifications sent by the TeamSpeak-Server,\nyou can send a normal command \"servernotifyregister\" (consider specification).\nAny event sent by the server that starts with \"notify\" is then fired as\nan event (e. g. as soon as a \"notifyclientmove\"-notification is sent by the server,\nthe TeamSpeakClient-instance fires the \"clientmove\"-event with only\none parameter which is an object containing the given parameters). \n",
  "homepage": "https://github.com/gwTumm/node-teamspeak",
  "_id": "node-teamspeak@1.0.4",
  "_from": "node-teamspeak@>=1.0.4"
}
